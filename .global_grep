#!/bin/bash
#
# "global grep" (gg): ripgrep and then vim the files.
# based on https://github.com/sampson-chen/sack
#
# @usage:
#    gg <ripgrep args>
#     v <numbers>

#########################################
## parameters that you might want to tune
#########################################
unset v
shortcut_cmd=v
shortcut_path=~/bin
shortcut_file=${HOME}/.gg_shortcuts
# grepper="rg -n --max-columns 0 --color=ansi"
grepper="ag --color"


# Prefixes a shortcut tag to relevant output lines.
file_name=""
display_shortcuts() {
    # Note that by default ack uses the --nogroup -H option by default when
    # output is piped or redirected, so we do get a file name on each line as $1
    # We could have restored the default look for ack with the --group option, but
    # it turns out that this is actually simpler to parse with --nogroup and then
    # reformat the output to match the --group formats.
    awk -v f_name=$file_name -F':' '
    BEGIN {x=1};
    {
        if ($1 != f_name) {
            printf("\n%s\n", $1);
            f_name=$1;
        };
        printf("[%s] ", x);
        printf("%s", $2);
        for (i=3; i<=NF; i++) {
            printf(":%s", $i);
        }
        printf("\n");
        x++;
    };'
}

# Processes the output that goes into the shortcut file:
# input:  "relative_file_path:line_number:content"
# output: "line_number full_file_path"
process_shortcut_paths() {
    awk -F':' '{ print $2 " " $1; }'
}

# Remove the escaped characters for shortcut file
remove_escaped_chars() {
    OS=$(uname)
    if [[ $OS == "Linux" ]]; then
        sed -r "s/\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
    elif [[ $OS == "Darwin" ]]; then
        sed -E "s/\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
    fi
}

# Create the actual shortcut command to be used across terminals / shell sessions
create_shortcut_cmd_vim() {
    shortcut_cmd_path=$shortcut_path/$shortcut_cmd
    cat > $shortcut_cmd_path <<SHORTCUT
#!/bin/bash

args=""
for var in "\$@"
do
    vim_shortcut=\$(sed -n "\${var}p" < $shortcut_file)
    line=\`echo \$vim_shortcut | cut -d" " -f1\`
    file=\`echo \$vim_shortcut | sed 's/'\$line' //'\`
    args="\$args \$file:\$line"
done

if [ -z "\$EDITOR" ]; then
    editor="vim"
else
    editor="\$EDITOR"
fi

\$editor \$args
SHORTCUT
    chmod +x $shortcut_cmd_path
}

#########################################
# main
#########################################

$grepper "$@" "$(pwd)" | tee >/dev/null >(display_shortcuts) >(process_shortcut_paths | remove_escaped_chars > "$shortcut_file")

create_shortcut_cmd_vim
